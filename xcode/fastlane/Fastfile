opt_out_usage
default_platform(:ios)

platform :ios do
  private_lane :prepare do
    if is_ci
      xcversion(version: "~> 13.4.1")
      setup_ci # creates MATCH_KEYCHAIN_NAME on CI
      ensure_env_vars(
        env_vars: ['APPSTORE_CERTIFICATE_PASSWORD']
      )
      import_certificate(
        certificate_path: 'keys/CertificatesDev.p12',
        certificate_password: ENV['APPSTORE_CERTIFICATE_PASSWORD'],
        keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
        keychain_password: ENV['MATCH_KEYCHAIN_PASSWORD']
      )
      import_certificate(
        certificate_path: 'keys/CertificatesDistr.p12',
        certificate_password: ENV['APPSTORE_CERTIFICATE_PASSWORD'],
        keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
        keychain_password: ENV['MATCH_KEYCHAIN_PASSWORD']
      )
      get_provisioning_profile(
        api_key_path: 'keys/appstore.json',
        app_identifier: 'app.organicmaps',
        provisioning_name: 'CarPlay Release',
        ignore_profiles_with_different_name: true,
        readonly: true,
        development: true,
        skip_install: false,
        filename: 'keys/CarPlay_Release.mobileprovision'
      )
      get_provisioning_profile(
        api_key_path: 'keys/appstore.json',
        app_identifier: 'app.organicmaps',
        provisioning_name: 'CarPlay AppStore',
        ignore_profiles_with_different_name: true,
        adhoc: false,
        readonly: true,
        skip_install: false,
        filename: 'keys/CarPlay_AppStore.mobileprovision'
      )
    end
  end

  private_lane :generate_version do
    lane_context[SharedValues::VERSION_NUMBER] = sh('../../tools/unix/version.sh ios_version').strip
    lane_context[SharedValues::BUILD_NUMBER] = sh('../../tools/unix/version.sh ios_build').strip
  end

  private_lane :generate_testflight_changelog do
    changelog = sh('git --no-pager show -s --format=%s%n%n%b HEAD|tr -dc \'\0-\177\'')
    lane_context[SharedValues::FL_CHANGELOG] = changelog
  end

  lane :upload_testflight do
    prepare
    generate_version
    generate_testflight_changelog
    build_ios_app(
      workspace: 'omim.xcworkspace',
      scheme: 'OMaps',
      configuration: 'Release',
      destination: 'generic/platform=iOS',
      silent: false,
      clean: false,
      include_symbols: true,
      include_bitcode: true,
      export_method: 'app-store',
      export_options: {
        provisioningProfiles: {
          'app.organicmaps' => 'CarPlay AppStore'
        }
      },
      skip_profile_detection: false,
      output_directory: 'build',
      xcargs: 'MARKETING_VERSION=' + lane_context[SharedValues::VERSION_NUMBER] + ' ' +
              'CURRENT_PROJECT_VERSION=' + lane_context[SharedValues::BUILD_NUMBER] + ' '
    )
    upload_to_testflight(
      beta_app_feedback_email: 'testflight@organicmaps.app',
      notify_external_testers: false,
      changelog: lane_context[SharedValues::FL_CHANGELOG]
    )
  end
end
